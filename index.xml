<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Bryan Tan&#39;s Website</title>
    <link>https://technius.net/</link>
    <description>Recent content in Home on Bryan Tan&#39;s Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016-2022 Bryan Tan. Articles are licensed under CC-BY-4.0; code in articles licensed under MIT License.</copyright>
    <lastBuildDate>Tue, 09 May 2017 22:04:06 -0700</lastBuildDate><atom:link href="https://technius.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cleaner Error Handling in Scala with Cats EitherT</title>
      <link>https://technius.net/posts/eithert-error-handling/</link>
      <pubDate>Tue, 09 May 2017 22:04:06 -0700</pubDate>
      
      <guid>https://technius.net/posts/eithert-error-handling/</guid>
      <description>Introduction In Scala, it&amp;rsquo;s a common practice to handle errors or perform validation using Option or Either. For example, a form on a website may be validated on a server by using a series of Eithers, which will return the valid model data or a message explaining the problems in the form submission. However, adding more complicated concerns into the Either sequence, such as Options or Futures, requires a lot of boilerplate.</description>
    </item>
    
    <item>
      <title>Improving Akka HTTP REST API Response Handling with Marshallers</title>
      <link>https://technius.net/posts/akka-http-api-response-marshalling/</link>
      <pubDate>Fri, 24 Mar 2017 23:54:00 -0700</pubDate>
      
      <guid>https://technius.net/posts/akka-http-api-response-marshalling/</guid>
      <description>I&amp;rsquo;ve been trying out akka-http for a while now, and I found it to be great for making REST APIs. However, it is complicated to use and can lead to a massive amount of boilerplate if its features aren&amp;rsquo;t taken advantage of completely. In this article, I&amp;rsquo;m going to to take a look at one feature of Akka HTTP that I explored recently: marshallers.
Motivation To demonstrate how status codes are usually returned in Akka HTTP, let&amp;rsquo;s consider a simple example of a REST API: an online notepad.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://technius.net/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://technius.net/projects/</guid>
      <description>Projects Here are some of the projects I&amp;rsquo;ve worked on in the past.
Xournal++ Xournal++ is an open source, cross-platform note-taking program implemented in C++ using GTK 3. It is primarily used for taking hand-written notes via a stylus, but it also supports LaTeX, audio recordings, and text annotations. Xournal++ can also be used to annotate PDF files.
I have been one of the primary maintainers of Xournal++ since early 2019: in addition to fixing bugs and implementing new features, I also triage issues, manage the build configuration, and create new releases.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://technius.net/research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://technius.net/research/</guid>
      <description>Research Profile Biography I&amp;rsquo;m Bryan Tan, a compiler engineer currently working in the industry. I graduated from UC Santa Barbara in 2021 with a Master&amp;rsquo;s degree in Computer Science. While I was at UCSB, I worked with Prof. Yu Feng on several research projects related to program verification for domain-specific languages. I currently do not have any plans to rejoin academia, although I am still open to collaborating on research projects (subject to corporate legal approval).</description>
    </item>
    
  </channel>
</rss>
